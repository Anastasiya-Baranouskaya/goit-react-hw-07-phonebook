{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/contacts/actions.js","services/contacts-api.js","redux/contacts/operations.js","redux/contacts/selectors.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","s","section","filterContact","createAction","URL","BASE_URL","fetchContacts","a","axios","get","data","fetchAddContacts","item","post","fetchDeleteContacts","id","delete","fetchContact","createAsyncThunk","_","rejectWithValue","contactsAPI","error","message","addContact","deleteContact","getContacts","state","contacts","getFilter","filter","getLoader","loading","ContactListItem","name","number","dispatch","useDispatch","listItem","span","button","type","onClick","contactsOperations","onDelete","ContactList","useSelector","contactsSelectors","loader","useEffect","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","style","height","visibility","list","map","length","ContactForm","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","normalizedName","find","el","alert","nameId","uuidv4","telId","onSubmit","preventDefault","form","htmlFor","label","input","pattern","required","onChange","Component","changeFilter","useCallback","contactsActions","div","App","createReducer","fulfilled","action","payload","pending","rejected","contactReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58d4bc01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3HUzi\",\"label\":\"ContactForm_label__19zLa\",\"input\":\"ContactForm_input__22ZGz\",\"button\":\"ContactForm_button__1itrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Filter_div__35Wuh\",\"label\":\"Filter_label__2byXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__7K6TZ\"};","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contacts/filterContact');\n","import axios from 'axios';\n\nconst BASE_URL = 'https://61a49f034c822c0017041d29.mockapi.io';\nconst URL = BASE_URL + '/contacts';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(URL);\n  return data;\n}\n\nexport async function fetchAddContacts(item) {\n  const { data } = await axios.post(URL, item);\n  return data;\n}\n\nexport async function fetchDeleteContacts({ id }) {\n  const { data } = await axios.delete(`${URL}/${id}`);\n  return data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { contactsAPI } from '../../services';\n\nexport const fetchContact = createAsyncThunk(\n  'contacts/fetchContact',\n  async (_, { rejectWithValue }) => {\n    try {\n      const data = await contactsAPI.fetchContacts();\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.error.message);\n    }\n  },\n);\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (item, { rejectWithValue }) => {\n    try {\n      const data = await contactsAPI.fetchAddContacts(item);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.error.message);\n    }\n  },\n);\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      const data = await contactsAPI.fetchDeleteContacts(id);\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.error.message);\n    }\n  },\n);\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const getLoader = state => state.loading;\n","import { useDispatch } from 'react-redux';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { contactsOperations } from '../../redux/contacts';\n\nexport default function ContactListItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <li className={s.listItem}>\n      <span className={s.span}>{name}:</span>\n      <span className={s.span}>{number}:</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete({ id });\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const loader = useSelector(contactsSelectors.getLoader);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, contacts]);\n\n  return (\n    <>\n      {\n        <h1\n          style={{ height: '30px', visibility: loader ? 'visible' : 'hidden' }}\n        >\n          Loading...\n        </h1>\n      }\n      <ul className={s.list}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n      {filteredContacts.length === 0 && !loader && (\n        <h1>There are no contacts in phonebook!</h1>\n      )}\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { contactsOperations } from '../../redux/contacts';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number, id: uuidv4() });\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is alredy in contacts`)\n      : dispatch(contactsOperations.addContact(item));\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor={nameId} className={s.label}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n        id={nameId}\n      />\n      <br />\n      <label htmlFor={telId} className={s.label}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <br />\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { contactsActions } from '../../redux/contacts';\nimport s from './Filter.module.css';\n\nexport default function Component() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(\n    e => {\n      dispatch(contactsActions.filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className={s.div}>\n      <label htmlFor=\"filter\" className={s.label}>\n        Find contacts by name:\n      </label>\n      <input type=\"text\" value={filter} id=\"filter\" onChange={changeFilter} />\n    </div>\n  );\n}\n","import './App.css';\nimport Section from './components/Section/Section';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <h1>Contacts</h1>\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { contactsActions } from '.';\nimport { contactsOperations } from '.';\n\nconst contacts = createReducer([], {\n  [contactsOperations.fetchContact.fulfilled]: (_, action) => action.payload,\n  [contactsOperations.addContact.fulfilled]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [contactsOperations.deleteContact.fulfilled]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload.id),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContact]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsOperations.fetchContact.pending]: () => true,\n  [contactsOperations.fetchContact.fulfilled]: () => false,\n  [contactsOperations.fetchContact.rejected]: () => false,\n\n  [contactsOperations.addContact.pending]: () => true,\n  [contactsOperations.addContact.fulfilled]: () => false,\n  [contactsOperations.addContact.rejected]: () => false,\n\n  [contactsOperations.deleteContact.pending]: () => true,\n  [contactsOperations.deleteContact.fulfilled]: () => false,\n  [contactsOperations.deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsOperations.fetchContact.rejected]: (_, action) => action.payload,\n  [contactsOperations.fetchContact.pending]: () => null,\n\n  [contactsOperations.addContact.rejected]: (_, action) => action.payload,\n  [contactsOperations.addContact.pending]: () => null,\n\n  [contactsOperations.deleteContact.rejected]: (_, action) => action.payload,\n  [contactsOperations.deleteContact.pending]: () => null,\n});\n\nexport const contactReducer = combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactReducer } from './contacts/reducers';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\nexport const store = configureStore({\n  reducer: contactReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1seZf\",\"listItem\":\"ContactList_listItem__uzc7Z\",\"span\":\"ContactList_span__MY26W\",\"button\":\"ContactList_button__2oUYr\"};"],"sourceRoot":""}